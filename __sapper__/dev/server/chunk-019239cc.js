'use strict';

var __chunk_1 = require('./chunk-42b181d7.js');

/* src/components/DCRenderer.svelte generated by Svelte v3.6.7 */

async function getComponent(DisplayTypeShortCode){
	// let component = await import(`./dataComponents/${DisplayTypeShortCode}.svelte`);
	// return component.default;

	let component;
	switch (DisplayTypeShortCode) {
		case 'GROUP':
			component = await new Promise(function (resolve) { resolve(require('./GROUP-d5187ccf.js')); });
			return component.default;

		case 'TEXTBOX':
			component = await new Promise(function (resolve) { resolve(require('./TEXTBOX-0ed7bcd5.js')); });
			return component.default;

		case 'DATEPICKER':
			component = await new Promise(function (resolve) { resolve(require('./DATEPICKER-67f774c9.js')); });
			return component.default;

		case 'DROPDOWN':
			component = await new Promise(function (resolve) { resolve(require('./DROPDOWN-524f4cfa.js')); });
			return component.default;

		default:
			throw new Error(`Unknown component ${DisplayTypeShortCode}`)
	}
}

const DCRenderer = __chunk_1.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { DisplayTypeShortCode, ShortCode, Label, children } = $$props;

	let promise = getComponent(DisplayTypeShortCode);

	if ($$props.DisplayTypeShortCode === void 0 && $$bindings.DisplayTypeShortCode && DisplayTypeShortCode !== void 0) $$bindings.DisplayTypeShortCode(DisplayTypeShortCode);
	if ($$props.ShortCode === void 0 && $$bindings.ShortCode && ShortCode !== void 0) $$bindings.ShortCode(ShortCode);
	if ($$props.Label === void 0 && $$bindings.Label && Label !== void 0) $$bindings.Label(Label);
	if ($$props.children === void 0 && $$bindings.children && children !== void 0) $$bindings.children(children);

	return `${(function(__value) { if(__chunk_1.is_promise(__value)) return `
		<p>...loading component</p>
	`; return function(component) { return `
		${__chunk_1.validate_component(((component) || __chunk_1.missing_component), 'svelte:component').$$render($$result, Object.assign($$props), {}, {})}
	`;}(__value);}(promise)) }`;
});

exports.DCRenderer = DCRenderer;
